{"version":3,"sources":["components/pages/SinglePage.jsx","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","console","log","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"mLA6CeA,UArCI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACjBC,EAAMC,cAAND,GACP,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAmEC,cAA3DC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,WAErDC,qBAAU,WACNC,MACD,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,QACDO,EAASN,GAAIa,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,gBACtD,MACJ,IAAK,YACDH,EAAaP,GAAIa,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,gBAC1D,MACJ,QACAK,QAAQC,IAAI,qBAIdF,EAAe,SAACX,GAClBC,EAAQD,IAIZ,OACI,qCACI,cAAC,IAAD,IACCc,YAAWR,EAASX,EAAWK,Q,mECrBjCe,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCOhBF,IAfI,SAACR,EAASX,EAAWK,GACpC,OAAQM,GACJ,IAAK,UACD,OAAO,cAAC,EAAD,IACX,IAAK,UACD,OAAO,cAACW,EAAA,EAAD,IACX,IAAK,YACD,OAAO,cAACtB,EAAD,CAAWK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACkB,EAAA,EAAD,IACX,QACI,MAAM,IAAIC,MAAM,gC","file":"static/js/8.5d2053e3.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const { getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                    break;\r\n                default:\r\n                console.log(\"Didn't find any\")\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {setContent(process, Component, data)}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting': \r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state!')\r\n    }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}